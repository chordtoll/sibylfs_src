# these all get generated in a single pass by lem

run_lem: $(DOTLEM)
	echo building for $@
	$(LEM) $(LEMFLAGS) -ocaml $(DOTLEM)
	cp t_fs_spec.ml t_fs_spec.ml.tmp
	sed -f patch_lem.sed t_fs_spec.ml.tmp > t_fs_spec.ml
	rm t_fs_spec.ml.tmp
	touch run_lem

#	sed -i -e "s/let >>= = fsm_bind/let (>>=) = fsm_bind/" t_fs_spec.ml # fix lem bug
#	sed -i -e "s/let <|||> = /let (<|||>) = /" t_fs_spec.ml # fix lem bug
#	sed -i -e "s/let |||> = /let (|||>) = /" t_fs_spec.ml # fix lem bug
#	sed -i -e "s/let ||| = /let (|||) = /" t_fs_spec.ml # fix lem bug


# make the t_ml files depend on actually running lem; lem processes all files at once
$(GENERATED_TML): run_lem

generated_tml: $(GENERATED_TML)
	touch $@
